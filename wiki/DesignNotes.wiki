#summary One-sentence summary of this page.

= Design FAQ =

== Why is there no bits twiddling functions/operators ? ==

Because the aim of the language to teach algorithmics not C.
If you want to have fun with bits, use C.

== Why is there no semicolon after each instruction ? ==

Because you don't need semicolons to disambiguate a grammar.
Semis are only useful when you do error recovery, but even
in this case, you can do error recovery using the end of line. 

== Why you don't use if...fi like in ALGOL ? ==

The four first languages of the TIOBE index (Java, C, PHP, C++)
uses curly braces.

== Why not using spaces like in Python ? ==

I expect that pseudo will be used to teach, create and test algorithmics
so when you write an algorithm you move block around and I've always found
more easy to do that if block are defined by curly braces.
But I guess it depends if you IDE is able or not to help you. 

== Why is there no call by reference like in C ? ==

Because you don't needed it.
There are in my opinions two use case:
 * You need call by reference in C because you allocation something
   on the stack and want to send it by its address.
   Pseudo is a managed language, the runtime provide a GC
   so this kind of problem will not arive
 * You need to write swap.
   Knowing that you will use swap in a sort algorithm, you can
   rewrite it like that
   {{{
   def swap(any[] array, int i, int j):void {
     any tmp = array[i]
     array[i] = array[j]
     array[j] = tmp
   }
   }}}